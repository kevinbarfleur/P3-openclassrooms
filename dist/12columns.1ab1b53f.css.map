{"version":3,"sources":["12columns.scss"],"names":[],"mappings":"AAAA;AACA;AAQA;EACE;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;;AACA;EACE;;;AAIJ;EACE;;;AAGF;EACE;;;AAGF;EACE;;;AAGF;EACE;;;AAGF;EACE;;;AAIA;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAIJ;EAEI;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;AAKN;EAEI;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;AAKN;EAEI;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;AAKN;EACE;IACE;IACA;IACA;;EACA;IACE;IACA;;;EAKF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAFF;IACE;IACA;;;EAIJ;IAEI;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;EAKN;IAEI;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;EAKN;IAEI;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA;;;IAFF;MACE;MACA","file":"12columns.1ab1b53f.css","sourceRoot":"..","sourcesContent":["/* 12columns.css | Created by Katherine Kato | Released under the MIT license */\n/* GitHub: https://kathykato.github.io/12columns/ */\n\n$grid-columns: 12;\n\n$sm: 48rem;\n$md: 62rem;\n$lg: 75rem;\n\n.container {\n  margin: auto;\n  padding: 0 1rem;\n  max-width: 71.25rem;\n  width: 100%;\n}\n\n.grid {\n  display: flex;\n  flex-direction: column;\n  flex-flow: row wrap;\n  > [class*=\"column-\"] {\n    display: block;\n  }\n}\n\n.first {\n  order: -1;\n}\n\n.last {\n  order: 12;\n}\n\n.align-top {\n  align-items: start;\n}\n\n.align-center {\n  align-items: center;\n}\n\n.align-bottom {\n  align-items: end;\n}\n\n@for $i from 1 through $grid-columns {\n  .column-xs-#{$i} {\n    flex-basis: $i / $grid-columns * 100%;\n    max-width: $i / $grid-columns * 100%;\n  }\n}\n\n@media (min-width: $sm) {\n  @for $i from 1 through $grid-columns {\n    .column-sm-#{$i} {\n      flex-basis: $i / $grid-columns * 100%;\n      max-width: $i / $grid-columns * 100%;\n    }\n  }\n}\n\n@media (min-width: $md) {\n  @for $i from 1 through $grid-columns {\n    .column-md-#{$i} {\n      flex-basis: $i / $grid-columns * 100%;\n      max-width: $i / $grid-columns * 100%;\n    }\n  }\n}\n\n@media (min-width: $lg) {\n  @for $i from 1 through $grid-columns {\n    .column-lg-#{$i} {\n      flex-basis: $i / $grid-columns * 100%;\n      max-width: $i / $grid-columns * 100%;\n    }\n  }\n}\n\n@supports (display: grid) {\n  .grid {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    grid-template-rows: auto;\n    > [class*=\"column-\"] {\n      margin: 0;\n      max-width: 100%;\n    }\n  }\n\n  @for $i from 1 through $grid-columns {\n    .column-xs-#{$i} {\n      grid-column-start: span #{$i};\n      grid-column-end: span #{$i};\n    }\n  }\n\n  @media (min-width: $sm) {\n    @for $i from 1 through $grid-columns {\n      .column-sm-#{$i} {\n        grid-column-start: span #{$i};\n        grid-column-end: span #{$i};\n      }\n    }\n  }\n\n  @media (min-width: $md) {\n    @for $i from 1 through $grid-columns {\n      .column-md-#{$i} {\n        grid-column-start: span #{$i};\n        grid-column-end: span #{$i};\n      }\n    }\n  }\n\n  @media (min-width: $lg) {\n    @for $i from 1 through $grid-columns {\n      .column-lg-#{$i} {\n        grid-column-start: span #{$i};\n        grid-column-end: span #{$i};\n      }\n    }\n  }\n}\n"]}